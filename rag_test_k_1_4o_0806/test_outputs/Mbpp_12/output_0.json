{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n\nTests failed:\nNone",
    "code": "\ndef sort_matrix(matrix):\n    # Sort the matrix based on the sum of each row\n    # The key for sorting is the sum of the row\n    sorted_matrix = sorted(matrix, key=sum)\n    return sorted_matrix\n",
    "full_code": "\ndef sort_matrix(matrix):\n    # Sort the matrix based on the sum of each row\n    # The key for sorting is the sum of the row\n    sorted_matrix = sorted(matrix, key=sum)\n    return sorted_matrix\n",
    "reward": true,
    "program_code": "\ndef sort_matrix(matrix):\n    # Sort the matrix based on the sum of each row\n    # The key for sorting is the sum of the row\n    sorted_matrix = sorted(matrix, key=sum)\n    return sorted_matrix\n",
    "program_name": "sort_matrix",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English:**\n\n   We need to write a function that takes a matrix (a list of lists) as input and sorts the rows of this matrix in ascending order based on the sum of the elements in each row.\n\n2. **Conceptualize a solution in plain English:**\n\n   - First, calculate the sum of each row in the matrix.\n   - Use these sums to sort the rows of the matrix in ascending order.\n   - Return the sorted matrix.\n\n3. **Write a pseudocode solution:**\n\n   ```\n   Define function sort_matrix(matrix):\n       For each row in the matrix, calculate the sum of the row.\n       Sort the matrix based on the calculated row sums.\n       Return the sorted matrix.\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n\n```python\ndef sort_matrix(matrix):\n    # Sort the matrix based on the sum of each row\n    # The key for sorting is the sum of the row\n    sorted_matrix = sorted(matrix, key=sum)\n    return sorted_matrix\n```\n\nThis function will take a matrix as input, calculate the sum of each row, and sort the rows based on these sums in ascending order. The sorted matrix is then returned.",
    "no_parent": true,
    "dependency_used": false
}