{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n\nTests failed:\nNone",
    "code": "\ndef move_num(input_string: str) -> str:\n    # Initialize lists to hold letters and numbers separately\n    letters = []\n    numbers = []\n    \n    # Iterate over each character in the input string\n    for char in input_string:\n        # Check if the character is a digit\n        if char.isdigit():\n            # Append to numbers list if it is a digit\n            numbers.append(char)\n        else:\n            # Append to letters list if it is not a digit\n            letters.append(char)\n    \n    # Concatenate letters and numbers lists to form the result string\n    result_string = ''.join(letters) + ''.join(numbers)\n    \n    # Return the result string\n    return result_string\n",
    "full_code": "\ndef move_num(input_string: str) -> str:\n    # Initialize lists to hold letters and numbers separately\n    letters = []\n    numbers = []\n    \n    # Iterate over each character in the input string\n    for char in input_string:\n        # Check if the character is a digit\n        if char.isdigit():\n            # Append to numbers list if it is a digit\n            numbers.append(char)\n        else:\n            # Append to letters list if it is not a digit\n            letters.append(char)\n    \n    # Concatenate letters and numbers lists to form the result string\n    result_string = ''.join(letters) + ''.join(numbers)\n    \n    # Return the result string\n    return result_string\n",
    "reward": true,
    "program_code": "\ndef move_num(input_string: str) -> str:\n    # Initialize lists to hold letters and numbers separately\n    letters = []\n    numbers = []\n    \n    # Iterate over each character in the input string\n    for char in input_string:\n        # Check if the character is a digit\n        if char.isdigit():\n            # Append to numbers list if it is a digit\n            numbers.append(char)\n        else:\n            # Append to letters list if it is not a digit\n            letters.append(char)\n    \n    # Concatenate letters and numbers lists to form the result string\n    result_string = ''.join(letters) + ''.join(numbers)\n    \n    # Return the result string\n    return result_string\n",
    "program_name": "move_num",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English:**\n\n   We need to create a function that takes a string as input and moves all the numbers in the string to the end, while keeping the order of the letters and numbers the same as they originally appeared.\n\n2. **Conceptualize a solution in plain English:**\n\n   - Initialize two empty lists: one for storing letters and another for storing numbers.\n   - Iterate through each character in the input string.\n   - If the character is a digit, append it to the numbers list.\n   - If the character is a letter, append it to the letters list.\n   - After processing all characters, concatenate the letters list and the numbers list to form the final string.\n   - Return the concatenated string.\n\n3. **Write a pseudocode solution:**\n\n   ```\n   function move_num(input_string):\n       initialize letters as an empty list\n       initialize numbers as an empty list\n       \n       for each character in input_string:\n           if character is a digit:\n               append character to numbers\n           else:\n               append character to letters\n       \n       concatenate letters and numbers into result_string\n       return result_string\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n\n```python\ndef move_num(input_string: str) -> str:\n    # Initialize lists to hold letters and numbers separately\n    letters = []\n    numbers = []\n    \n    # Iterate over each character in the input string\n    for char in input_string:\n        # Check if the character is a digit\n        if char.isdigit():\n            # Append to numbers list if it is a digit\n            numbers.append(char)\n        else:\n            # Append to letters list if it is not a digit\n            letters.append(char)\n    \n    # Concatenate letters and numbers lists to form the result string\n    result_string = ''.join(letters) + ''.join(numbers)\n    \n    # Return the result string\n    return result_string\n```",
    "no_parent": true,
    "dependency_used": false
}