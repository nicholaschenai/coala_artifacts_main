{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert remove_lowercase(\"PYTHon\")==('PYTH')\n\nTests failed:\nNone",
    "code": "\ndef remove_lowercase(s: str) -> str:\n    # Initialize an empty string to store the result\n    result = \"\"\n    # Iterate over each character in the input string\n    for char in s:\n        # Check if the character is uppercase\n        if char.isupper():\n            # Add the uppercase character to the result string\n            result += char\n    # Return the result string containing only uppercase characters\n    return result\n",
    "full_code": "\ndef remove_lowercase(s: str) -> str:\n    # Initialize an empty string to store the result\n    result = \"\"\n    # Iterate over each character in the input string\n    for char in s:\n        # Check if the character is uppercase\n        if char.isupper():\n            # Add the uppercase character to the result string\n            result += char\n    # Return the result string containing only uppercase characters\n    return result\n",
    "reward": true,
    "program_code": "\ndef remove_lowercase(s: str) -> str:\n    # Initialize an empty string to store the result\n    result = \"\"\n    # Iterate over each character in the input string\n    for char in s:\n        # Check if the character is uppercase\n        if char.isupper():\n            # Add the uppercase character to the result string\n            result += char\n    # Return the result string containing only uppercase characters\n    return result\n",
    "program_name": "remove_lowercase",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English:**\n\n   We need to create a function that takes a string as input and removes all lowercase letter substrings from it. The function should return the modified string that contains only the uppercase letters.\n\n2. **Conceptualize a solution in plain English:**\n\n   To solve this problem, we can iterate through each character in the input string. We will check if a character is uppercase. If it is, we will add it to a new string. If it is lowercase, we will skip it. Finally, we will return the new string that contains only the uppercase characters.\n\n3. **Write a pseudocode solution:**\n\n   ```\n   Initialize an empty string called result.\n   For each character in the input string:\n       If the character is uppercase:\n           Add the character to the result string.\n   Return the result string.\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n\n```python\ndef remove_lowercase(s: str) -> str:\n    # Initialize an empty string to store the result\n    result = \"\"\n    # Iterate over each character in the input string\n    for char in s:\n        # Check if the character is uppercase\n        if char.isupper():\n            # Add the uppercase character to the result string\n            result += char\n    # Return the result string containing only uppercase characters\n    return result\n```",
    "no_parent": true,
    "dependency_used": false
}