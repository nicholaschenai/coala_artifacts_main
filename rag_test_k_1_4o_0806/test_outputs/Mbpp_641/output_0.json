{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert is_nonagonal(10) == 325\n\nTests failed:\nNone",
    "code": "\ndef is_nonagonal(n: int) -> int:\n    # Calculate the nth nonagonal number using the formula\n    nonagonal_number = n * (7 * n - 5) // 2\n    # Return the calculated nonagonal number\n    return nonagonal_number\n",
    "full_code": "\ndef is_nonagonal(n: int) -> int:\n    # Calculate the nth nonagonal number using the formula\n    nonagonal_number = n * (7 * n - 5) // 2\n    # Return the calculated nonagonal number\n    return nonagonal_number\n",
    "reward": true,
    "program_code": "\ndef is_nonagonal(n: int) -> int:\n    # Calculate the nth nonagonal number using the formula\n    nonagonal_number = n * (7 * n - 5) // 2\n    # Return the calculated nonagonal number\n    return nonagonal_number\n",
    "program_name": "is_nonagonal",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English:**\n\n   We need to write a function that calculates the nth nonagonal number. A nonagonal number is a figurate number that extends the concept of triangular and square numbers to the nonagon (a nine-sided polygon). The nth nonagonal number can be calculated using a specific formula.\n\n2. **Conceptualize a solution in plain English:**\n\n   The formula for the nth nonagonal number is given by:\n   \\[\n   N(n) = \\frac{n(7n - 5)}{2}\n   \\]\n   Using this formula, we can compute the nth nonagonal number by substituting the value of n into the formula and performing the arithmetic operations.\n\n3. **Write a pseudocode solution:**\n\n   ```\n   Function is_nonagonal(n):\n       Calculate nonagonal_number using the formula: n * (7 * n - 5) / 2\n       Return nonagonal_number\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n\n```python\ndef is_nonagonal(n: int) -> int:\n    # Calculate the nth nonagonal number using the formula\n    nonagonal_number = n * (7 * n - 5) // 2\n    # Return the calculated nonagonal number\n    return nonagonal_number\n```\n\nThis function takes an integer `n` as input and returns the nth nonagonal number by applying the formula. The use of integer division `//` ensures that the result is an integer, as expected for nonagonal numbers.",
    "no_parent": true,
    "dependency_used": false
}