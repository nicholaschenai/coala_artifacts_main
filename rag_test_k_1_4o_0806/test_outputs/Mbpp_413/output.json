{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,0)==['Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull']\n\nTests failed:\nNone",
    "code": "\ndef extract_nth_element(list_of_tuples, n):\n    # Initialize an empty list to store the n-th elements\n    result = []\n    \n    # Iterate over each tuple in the list\n    for tuple_item in list_of_tuples:\n        # Append the n-th element of the current tuple to the result list\n        result.append(tuple_item[n])\n    \n    # Return the list containing all the extracted n-th elements\n    return result\n",
    "full_code": "\ndef extract_nth_element(list_of_tuples, n):\n    # Initialize an empty list to store the n-th elements\n    result = []\n    \n    # Iterate over each tuple in the list\n    for tuple_item in list_of_tuples:\n        # Append the n-th element of the current tuple to the result list\n        result.append(tuple_item[n])\n    \n    # Return the list containing all the extracted n-th elements\n    return result\n",
    "reward": true,
    "program_code": "\ndef extract_nth_element(list_of_tuples, n):\n    # Initialize an empty list to store the n-th elements\n    result = []\n    \n    # Iterate over each tuple in the list\n    for tuple_item in list_of_tuples:\n        # Append the n-th element of the current tuple to the result list\n        result.append(tuple_item[n])\n    \n    # Return the list containing all the extracted n-th elements\n    return result\n",
    "program_name": "extract_nth_element",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English:**\n\n   We need to create a function that takes a list of tuples and an integer `n` as inputs. The function should return a list containing the `n`-th element from each tuple in the list.\n\n2. **Conceptualize a solution in plain English:**\n\n   - Initialize an empty list to store the `n`-th elements.\n   - Iterate over each tuple in the given list.\n   - For each tuple, extract the element at the `n`-th index and append it to the list.\n   - Return the list containing all the extracted elements.\n\n3. **Write a pseudocode solution:**\n\n   ```\n   function extract_nth_element(list_of_tuples, n):\n       Initialize an empty list called result\n       For each tuple in list_of_tuples:\n           Append the element at index n of the tuple to result\n       Return result\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n\n```python\ndef extract_nth_element(list_of_tuples, n):\n    # Initialize an empty list to store the n-th elements\n    result = []\n    \n    # Iterate over each tuple in the list\n    for tuple_item in list_of_tuples:\n        # Append the n-th element of the current tuple to the result list\n        result.append(tuple_item[n])\n    \n    # Return the list containing all the extracted n-th elements\n    return result\n```",
    "no_parent": true,
    "dependency_used": false
}