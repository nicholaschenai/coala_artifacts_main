{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert sumofFactors(18) == 26\n\nTests failed:\nNone",
    "code": "\ndef sum_of_even_factors(n):\n    # Initialize the sum of even factors to 0\n    total_sum = 0\n    \n    # Iterate through all numbers from 1 to n\n    for i in range(1, n + 1):\n        # Check if i is a factor of n\n        if n % i == 0:\n            # Check if the factor is even\n            if i % 2 == 0:\n                # Add the even factor to the total sum\n                total_sum += i\n                \n    # Return the total sum of even factors\n    return total_sum\n\n# The function name must be exactly as specified\ndef sumofFactors(n):\n    return sum_of_even_factors(n)\n",
    "full_code": "\ndef sum_of_even_factors(n):\n    # Initialize the sum of even factors to 0\n    total_sum = 0\n    \n    # Iterate through all numbers from 1 to n\n    for i in range(1, n + 1):\n        # Check if i is a factor of n\n        if n % i == 0:\n            # Check if the factor is even\n            if i % 2 == 0:\n                # Add the even factor to the total sum\n                total_sum += i\n                \n    # Return the total sum of even factors\n    return total_sum\n\n# The function name must be exactly as specified\ndef sumofFactors(n):\n    return sum_of_even_factors(n)\n",
    "reward": true,
    "program_code": "\ndef sum_of_even_factors(n):\n    # Initialize the sum of even factors to 0\n    total_sum = 0\n    \n    # Iterate through all numbers from 1 to n\n    for i in range(1, n + 1):\n        # Check if i is a factor of n\n        if n % i == 0:\n            # Check if the factor is even\n            if i % 2 == 0:\n                # Add the even factor to the total sum\n                total_sum += i\n                \n    # Return the total sum of even factors\n    return total_sum\n\n# The function name must be exactly as specified\ndef sumofFactors(n):\n    return sum_of_even_factors(n)\n",
    "program_name": "sumofFactors",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English**: We need to create a function that calculates the sum of all even factors of a given integer. For example, if the input is 18, the even factors are 2, 6, and 18, and their sum is 26.\n\n2. **Conceptualize a solution first in plain English**: \n   - To find the even factors of a number, we can iterate through all integers from 1 to that number.\n   - For each integer, we check if it is a factor (i.e., if the number is divisible by that integer).\n   - If it is a factor and it is even, we add it to a running total.\n   - Finally, we return the total sum of the even factors.\n\n3. **Write a pseudocode solution**:\n   ```\n   function sumofFactors(n):\n       initialize sum to 0\n       for i from 1 to n:\n           if n is divisible by i:\n               if i is even:\n                   add i to sum\n       return sum\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments**:\n```python\ndef sum_of_even_factors(n):\n    # Initialize the sum of even factors to 0\n    total_sum = 0\n    \n    # Iterate through all numbers from 1 to n\n    for i in range(1, n + 1):\n        # Check if i is a factor of n\n        if n % i == 0:\n            # Check if the factor is even\n            if i % 2 == 0:\n                # Add the even factor to the total sum\n                total_sum += i\n                \n    # Return the total sum of even factors\n    return total_sum\n\n# The function name must be exactly as specified\ndef sumofFactors(n):\n    return sum_of_even_factors(n)\n```",
    "no_parent": true,
    "dependency_used": false
}