{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nNone\n\nTests failed:\nassert wind_chill(120,35)==40 # output: 41",
    "code": "\nimport math\n\n# Function to calculate the wind chill index\ndef wind_chill(velocity: int, temperature: int) -> int:\n    # Calculate the wind chill index using the formula\n    WCI = 13.12 + (0.6215 * temperature) - (11.37 * (velocity ** 0.16)) + (0.3965 * temperature * (velocity ** 0.16))\n    # Round up the result to the next integer\n    return math.ceil(WCI)\n\n",
    "full_code": "\nimport math\n\n# Function to calculate the wind chill index\ndef wind_chill(velocity: int, temperature: int) -> int:\n    # Calculate the wind chill index using the formula\n    WCI = 13.12 + (0.6215 * temperature) - (11.37 * (velocity ** 0.16)) + (0.3965 * temperature * (velocity ** 0.16))\n    # Round up the result to the next integer\n    return math.ceil(WCI)\n\n",
    "reward": false,
    "program_code": "\nimport math\n\n# Function to calculate the wind chill index\ndef wind_chill(velocity: int, temperature: int) -> int:\n    # Calculate the wind chill index using the formula\n    WCI = 13.12 + (0.6215 * temperature) - (11.37 * (velocity ** 0.16)) + (0.3965 * temperature * (velocity ** 0.16))\n    # Round up the result to the next integer\n    return math.ceil(WCI)\n\n",
    "program_name": "wind_chill",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English**: \n   We need to create a function that calculates the wind chill index based on two inputs: wind velocity (in kilometers per hour) and temperature (in degrees Celsius). The result should be rounded up to the nearest whole number.\n\n2. **Conceptualize a solution first in plain English**: \n   The wind chill index can be calculated using a specific formula that takes into account both the wind speed and the temperature. The formula is:\n   \\[\n   WCI = 13.12 + 0.6215T - 11.37V^{0.16} + 0.3965TV^{0.16}\n   \\]\n   where \\( WCI \\) is the wind chill index, \\( T \\) is the temperature in Celsius, and \\( V \\) is the wind speed in km/h. After calculating the wind chill index using this formula, we will round the result up to the nearest integer.\n\n3. **Write a pseudocode solution**:\n   ```\n   FUNCTION wind_chill(velocity, temperature):\n       # Calculate the wind chill index using the formula\n       WCI = 13.12 + (0.6215 * temperature) - (11.37 * (velocity ** 0.16)) + (0.3965 * temperature * (velocity ** 0.16))\n       # Round up the result to the next integer\n       RETURN ceil(WCI)\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments**:\n```python\nimport math\n\n# Function to calculate the wind chill index\ndef wind_chill(velocity: int, temperature: int) -> int:\n    # Calculate the wind chill index using the formula\n    WCI = 13.12 + (0.6215 * temperature) - (11.37 * (velocity ** 0.16)) + (0.3965 * temperature * (velocity ** 0.16))\n    # Round up the result to the next integer\n    return math.ceil(WCI)\n\n```",
    "no_parent": true,
    "dependency_used": false
}