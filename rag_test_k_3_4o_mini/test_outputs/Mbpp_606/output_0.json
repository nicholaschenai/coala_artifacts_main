{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert radian_degree(90)==1.5707963267948966\n\nTests failed:\nNone",
    "code": "\n# Importing the constant pi from the math module\n# (Note: We will not use any external libraries, so we will define pi manually)\nPI = 3.141592653589793\n\n# Function to convert degrees to radians\ndef radian_degree(degrees):\n    # Calculate radians by multiplying degrees by (pi / 180)\n    radians = degrees * (PI / 180)\n    # Return the calculated radians\n    return radians\n",
    "full_code": "\n# Importing the constant pi from the math module\n# (Note: We will not use any external libraries, so we will define pi manually)\nPI = 3.141592653589793\n\n# Function to convert degrees to radians\ndef radian_degree(degrees):\n    # Calculate radians by multiplying degrees by (pi / 180)\n    radians = degrees * (PI / 180)\n    # Return the calculated radians\n    return radians\n",
    "reward": true,
    "program_code": "\n# Importing the constant pi from the math module\n# (Note: We will not use any external libraries, so we will define pi manually)\nPI = 3.141592653589793\n\n# Function to convert degrees to radians\ndef radian_degree(degrees):\n    # Calculate radians by multiplying degrees by (pi / 180)\n    radians = degrees * (PI / 180)\n    # Return the calculated radians\n    return radians\n",
    "program_name": "radian_degree",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English**: The task is to create a function that converts an angle measured in degrees to its equivalent in radians. The function should take a single input (the angle in degrees) and return the angle in radians.\n\n2. **Conceptualize a solution first in plain English**: To convert degrees to radians, we can use the mathematical relationship that \u03c0 radians is equivalent to 180 degrees. Therefore, to convert degrees to radians, we can multiply the degree value by \u03c0 and then divide by 180. This will give us the radian equivalent of the input degree.\n\n3. **Write a pseudocode solution**:\n   ```\n   FUNCTION radian_degree(degrees):\n       SET radians = degrees * (\u03c0 / 180)\n       RETURN radians\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments**:\n```python\n# Importing the constant pi from the math module\n# (Note: We will not use any external libraries, so we will define pi manually)\nPI = 3.141592653589793\n\n# Function to convert degrees to radians\ndef radian_degree(degrees):\n    # Calculate radians by multiplying degrees by (pi / 180)\n    radians = degrees * (PI / 180)\n    # Return the calculated radians\n    return radians\n```",
    "no_parent": true,
    "dependency_used": false
}