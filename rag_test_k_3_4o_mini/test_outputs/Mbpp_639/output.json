{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert sample_nam(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])==16\n\nTests failed:\nNone",
    "code": "\ndef sum_length_of_names(names):\n    # Initialize a variable to hold the total length of valid names\n    total_length = 0\n    \n    # Iterate through each name in the provided list\n    for name in names:\n        # Check if the first character of the name is uppercase\n        if name and name[0].isupper():\n            # If it is, add the length of the name to the total length\n            total_length += len(name)\n    \n    # Return the total length of names that start with an uppercase letter\n    return total_length\n\ndef sample_nam(names):\n    # Call the helper function to get the total length of valid names\n    return sum_length_of_names(names)\n",
    "full_code": "\ndef sum_length_of_names(names):\n    # Initialize a variable to hold the total length of valid names\n    total_length = 0\n    \n    # Iterate through each name in the provided list\n    for name in names:\n        # Check if the first character of the name is uppercase\n        if name and name[0].isupper():\n            # If it is, add the length of the name to the total length\n            total_length += len(name)\n    \n    # Return the total length of names that start with an uppercase letter\n    return total_length\n\ndef sample_nam(names):\n    # Call the helper function to get the total length of valid names\n    return sum_length_of_names(names)\n",
    "reward": true,
    "program_code": "\ndef sum_length_of_names(names):\n    # Initialize a variable to hold the total length of valid names\n    total_length = 0\n    \n    # Iterate through each name in the provided list\n    for name in names:\n        # Check if the first character of the name is uppercase\n        if name and name[0].isupper():\n            # If it is, add the length of the name to the total length\n            total_length += len(name)\n    \n    # Return the total length of names that start with an uppercase letter\n    return total_length\n\ndef sample_nam(names):\n    # Call the helper function to get the total length of valid names\n    return sum_length_of_names(names)\n",
    "program_name": "sample_nam",
    "dependencies": [],
    "raw_msg": "```python\ndef sum_length_of_names(names):\n    # Initialize a variable to hold the total length of valid names\n    total_length = 0\n    \n    # Iterate through each name in the provided list\n    for name in names:\n        # Check if the first character of the name is uppercase\n        if name and name[0].isupper():\n            # If it is, add the length of the name to the total length\n            total_length += len(name)\n    \n    # Return the total length of names that start with an uppercase letter\n    return total_length\n\ndef sample_nam(names):\n    # Call the helper function to get the total length of valid names\n    return sum_length_of_names(names)\n```",
    "no_parent": true,
    "dependency_used": false
}