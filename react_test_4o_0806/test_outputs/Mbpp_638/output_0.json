{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert wind_chill(120,35)==40\n\nTests failed:\nNone",
    "code": "\ndef wind_chill(velocity: float, temperature: float) -> int:\n    # Calculate the wind chill index using the given formula\n    WCI = 13.12 + 0.6215 * temperature - 11.37 * (velocity ** 0.16) + 0.3965 * temperature * (velocity ** 0.16)\n    \n    # Round the wind chill index to the nearest integer\n    rounded_WCI = round(WCI)\n    \n    # Return the rounded wind chill index\n    return rounded_WCI\n",
    "full_code": "\ndef wind_chill(velocity: float, temperature: float) -> int:\n    # Calculate the wind chill index using the given formula\n    WCI = 13.12 + 0.6215 * temperature - 11.37 * (velocity ** 0.16) + 0.3965 * temperature * (velocity ** 0.16)\n    \n    # Round the wind chill index to the nearest integer\n    rounded_WCI = round(WCI)\n    \n    # Return the rounded wind chill index\n    return rounded_WCI\n",
    "reward": true,
    "program_code": "\ndef wind_chill(velocity: float, temperature: float) -> int:\n    # Calculate the wind chill index using the given formula\n    WCI = 13.12 + 0.6215 * temperature - 11.37 * (velocity ** 0.16) + 0.3965 * temperature * (velocity ** 0.16)\n    \n    # Round the wind chill index to the nearest integer\n    rounded_WCI = round(WCI)\n    \n    # Return the rounded wind chill index\n    return rounded_WCI\n",
    "program_name": "wind_chill",
    "dependencies": [],
    "raw_msg": "## Problem Restatement\n\nWe need to create a function that calculates the wind chill index based on the given wind velocity in kilometers per hour (km/h) and temperature in Celsius. The result should be rounded to the nearest integer.\n\n## Conceptual Solution\n\n1. **Understand the Wind Chill Formula**: The wind chill index is a measure of how cold it feels when the wind is factored in with the actual air temperature. The formula to calculate the wind chill index in Celsius is:\n   \\[\n   WCI = 13.12 + 0.6215 \\times T - 11.37 \\times V^{0.16} + 0.3965 \\times T \\times V^{0.16}\n   \\]\n   where \\( T \\) is the temperature in Celsius and \\( V \\) is the wind velocity in km/h.\n\n2. **Calculate the Wind Chill Index**: Use the formula to compute the wind chill index using the provided temperature and wind velocity.\n\n3. **Round the Result**: Round the calculated wind chill index to the nearest integer.\n\n4. **Return the Result**: Return the rounded wind chill index.\n\n## Pseudocode\n\n```\nfunction wind_chill(velocity, temperature):\n    calculate WCI using the formula:\n        WCI = 13.12 + 0.6215 * temperature - 11.37 * (velocity ** 0.16) + 0.3965 * temperature * (velocity ** 0.16)\n    round WCI to the nearest integer\n    return the rounded WCI\n```\n\n## Final Python Solution\n\n```python\ndef wind_chill(velocity: float, temperature: float) -> int:\n    # Calculate the wind chill index using the given formula\n    WCI = 13.12 + 0.6215 * temperature - 11.37 * (velocity ** 0.16) + 0.3965 * temperature * (velocity ** 0.16)\n    \n    # Round the wind chill index to the nearest integer\n    rounded_WCI = round(WCI)\n    \n    # Return the rounded wind chill index\n    return rounded_WCI\n```",
    "no_parent": true,
    "dependency_used": false
}