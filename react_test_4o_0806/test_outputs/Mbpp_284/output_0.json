{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert check_element([\"green\", \"orange\", \"black\", \"white\"],'blue')==False\n\nTests failed:\nNone",
    "code": "\ndef check_element(lst, element):\n    # Iterate through each item in the list\n    for item in lst:\n        # If the current item is not equal to the specified element\n        if item != element:\n            # Return False immediately\n            return False\n    # If all items are equal to the specified element, return True\n    return True\n",
    "full_code": "\ndef check_element(lst, element):\n    # Iterate through each item in the list\n    for item in lst:\n        # If the current item is not equal to the specified element\n        if item != element:\n            # Return False immediately\n            return False\n    # If all items are equal to the specified element, return True\n    return True\n",
    "reward": true,
    "program_code": "\ndef check_element(lst, element):\n    # Iterate through each item in the list\n    for item in lst:\n        # If the current item is not equal to the specified element\n        if item != element:\n            # Return False immediately\n            return False\n    # If all items are equal to the specified element, return True\n    return True\n",
    "program_name": "check_element",
    "dependencies": [],
    "raw_msg": "\n### Problem Restatement\n\nWe need to write a function that checks if all elements in a given list are equal to a specified element. The function should return `True` if all elements in the list match the specified element, and `False` otherwise.\n\n### Conceptual Solution\n\n1. **Input**: A list of elements and a single element to compare against.\n2. **Output**: A boolean value (`True` or `False`).\n3. **Approach**:\n   - Iterate through each item in the list.\n   - Compare each item with the specified element.\n   - If any item does not match the specified element, return `False`.\n   - If all items match, return `True`.\n\n### Pseudocode\n\n```\nfunction check_element(lst, element):\n    for each item in lst:\n        if item is not equal to element:\n            return False\n    return True\n```\n\n### Final Python Solution\n\n```python\ndef check_element(lst, element):\n    # Iterate through each item in the list\n    for item in lst:\n        # If the current item is not equal to the specified element\n        if item != element:\n            # Return False immediately\n            return False\n    # If all items are equal to the specified element, return True\n    return True\n```",
    "no_parent": true,
    "dependency_used": false
}