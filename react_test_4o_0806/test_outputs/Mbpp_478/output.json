{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert remove_lowercase(\"PYTHon\")==('PYTH')\n\nTests failed:\nNone",
    "code": "\ndef remove_lowercase(input_string: str) -> str:\n    # Initialize an empty string to store the result\n    result = \"\"\n    \n    # Iterate over each character in the input string\n    for char in input_string:\n        # Check if the character is not lowercase\n        if not char.islower():\n            # Append the character to the result if it is not lowercase\n            result += char\n    \n    # Return the result string with all lowercase substrings removed\n    return result\n",
    "full_code": "\ndef remove_lowercase(input_string: str) -> str:\n    # Initialize an empty string to store the result\n    result = \"\"\n    \n    # Iterate over each character in the input string\n    for char in input_string:\n        # Check if the character is not lowercase\n        if not char.islower():\n            # Append the character to the result if it is not lowercase\n            result += char\n    \n    # Return the result string with all lowercase substrings removed\n    return result\n",
    "reward": true,
    "program_code": "\ndef remove_lowercase(input_string: str) -> str:\n    # Initialize an empty string to store the result\n    result = \"\"\n    \n    # Iterate over each character in the input string\n    for char in input_string:\n        # Check if the character is not lowercase\n        if not char.islower():\n            # Append the character to the result if it is not lowercase\n            result += char\n    \n    # Return the result string with all lowercase substrings removed\n    return result\n",
    "program_name": "remove_lowercase",
    "dependencies": [],
    "raw_msg": "\n### Problem Restatement\n\n1. **Restate the problem in plain English:**\n\n   We need to create a function that takes a string as input and removes all lowercase substrings from it. A lowercase substring is any sequence of consecutive lowercase letters. The function should return the modified string with only the non-lowercase parts.\n\n### Conceptualize a Solution\n\n2. **Conceptualize a solution in plain English:**\n\n   - We will iterate through each character in the input string.\n   - We will build a new string by adding only those characters that are not lowercase.\n   - If a character is uppercase or not a letter, it will be added to the new string.\n   - Finally, we will return the new string which will have all lowercase substrings removed.\n\n### Pseudocode\n\n3. **Write a pseudocode solution:**\n\n   ```\n   Define function remove_lowercase with parameter input_string\n       Initialize an empty string result\n       For each character in input_string\n           If the character is not lowercase\n               Append the character to result\n       Return result\n   ```\n\n### Final Python Solution\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n\n```python\ndef remove_lowercase(input_string: str) -> str:\n    # Initialize an empty string to store the result\n    result = \"\"\n    \n    # Iterate over each character in the input string\n    for char in input_string:\n        # Check if the character is not lowercase\n        if not char.islower():\n            # Append the character to the result if it is not lowercase\n            result += char\n    \n    # Return the result string with all lowercase substrings removed\n    return result\n```\n\nThis function will iterate through the input string, check each character to see if it is lowercase, and build a new string with only the non-lowercase characters. This effectively removes all lowercase substrings from the input.",
    "no_parent": true,
    "dependency_used": false
}