{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert is_Monotonic([6, 5, 4, 4]) == True\n\nTests failed:\nNone",
    "code": "\ndef is_Monotonic(array):\n    # An empty array or a single-element array is trivially monotonic\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags for non-decreasing and non-increasing\n    is_non_decreasing = True\n    is_non_increasing = True\n    \n    # Iterate through the array to check monotonicity\n    for i in range(len(array) - 1):\n        if array[i] > array[i + 1]:\n            is_non_decreasing = False\n        if array[i] < array[i + 1]:\n            is_non_increasing = False\n    \n    # The array is monotonic if it is either non-decreasing or non-increasing\n    return is_non_decreasing or is_non_increasing\n",
    "full_code": "\ndef is_Monotonic(array):\n    # An empty array or a single-element array is trivially monotonic\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags for non-decreasing and non-increasing\n    is_non_decreasing = True\n    is_non_increasing = True\n    \n    # Iterate through the array to check monotonicity\n    for i in range(len(array) - 1):\n        if array[i] > array[i + 1]:\n            is_non_decreasing = False\n        if array[i] < array[i + 1]:\n            is_non_increasing = False\n    \n    # The array is monotonic if it is either non-decreasing or non-increasing\n    return is_non_decreasing or is_non_increasing\n",
    "reward": true,
    "program_code": "\ndef is_Monotonic(array):\n    # An empty array or a single-element array is trivially monotonic\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags for non-decreasing and non-increasing\n    is_non_decreasing = True\n    is_non_increasing = True\n    \n    # Iterate through the array to check monotonicity\n    for i in range(len(array) - 1):\n        if array[i] > array[i + 1]:\n            is_non_decreasing = False\n        if array[i] < array[i + 1]:\n            is_non_increasing = False\n    \n    # The array is monotonic if it is either non-decreasing or non-increasing\n    return is_non_decreasing or is_non_increasing\n",
    "program_name": "is_Monotonic",
    "dependencies": [],
    "raw_msg": "### Problem Restatement\n\nWe need to determine if a given list of numbers is monotonic. A list is considered monotonic if it is either entirely non-increasing or non-decreasing. In other words, the list should either be sorted in ascending order or descending order, or remain constant.\n\n### Conceptual Solution\n\n1. **Identify Monotonicity**: \n   - A list is non-decreasing if each element is less than or equal to the next element.\n   - A list is non-increasing if each element is greater than or equal to the next element.\n   \n2. **Check Both Conditions**:\n   - We will check if the list is non-decreasing.\n   - We will also check if the list is non-increasing.\n   - If either condition is true, the list is monotonic.\n\n3. **Return Result**:\n   - If the list satisfies either the non-decreasing or non-increasing condition, return `True`.\n   - Otherwise, return `False`.\n\n### Pseudocode\n\n```\nfunction is_Monotonic(array):\n    if array is empty or has one element:\n        return True\n    \n    initialize two flags: is_non_decreasing and is_non_increasing to True\n    \n    for each index i from 0 to length of array - 2:\n        if array[i] > array[i + 1]:\n            set is_non_decreasing to False\n        if array[i] < array[i + 1]:\n            set is_non_increasing to False\n    \n    return is_non_decreasing or is_non_increasing\n```\n\n### Final Python Solution\n\n```python\ndef is_Monotonic(array):\n    # An empty array or a single-element array is trivially monotonic\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags for non-decreasing and non-increasing\n    is_non_decreasing = True\n    is_non_increasing = True\n    \n    # Iterate through the array to check monotonicity\n    for i in range(len(array) - 1):\n        if array[i] > array[i + 1]:\n            is_non_decreasing = False\n        if array[i] < array[i + 1]:\n            is_non_increasing = False\n    \n    # The array is monotonic if it is either non-decreasing or non-increasing\n    return is_non_decreasing or is_non_increasing\n```\n\nThis solution efficiently checks the monotonicity of the array by iterating through it once, making it O(n) in time complexity, where n is the number of elements in the array.",
    "no_parent": true,
    "dependency_used": false
}