{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert is_num_decagonal(3) == 27\n\nTests failed:\nNone",
    "code": "\ndef is_num_decagonal(n: int) -> int:\n    # Calculate the nth decagonal number using the formula\n    # D_n = 4n^2 - 3n\n    decagonal_number = 4 * n * n - 3 * n\n    return decagonal_number\n",
    "full_code": "\ndef is_num_decagonal(n: int) -> int:\n    # Calculate the nth decagonal number using the formula\n    # D_n = 4n^2 - 3n\n    decagonal_number = 4 * n * n - 3 * n\n    return decagonal_number\n",
    "reward": true,
    "program_code": "\ndef is_num_decagonal(n: int) -> int:\n    # Calculate the nth decagonal number using the formula\n    # D_n = 4n^2 - 3n\n    decagonal_number = 4 * n * n - 3 * n\n    return decagonal_number\n",
    "program_name": "is_num_decagonal",
    "dependencies": [],
    "raw_msg": "Sure, let's go through the problem-solving process step by step.\n\n### 1. Restate the problem in plain English\n\nWe need to write a function that calculates the nth decagonal number. A decagonal number is a figurate number that extends the concept of triangular and square numbers to the decagon (a ten-sided polygon). The formula for the nth decagonal number is given by:\n\n\\[ D_n = 4n^2 - 3n \\]\n\nwhere \\( n \\) is the position in the sequence.\n\n### 2. Conceptualize a solution in plain English\n\nTo find the nth decagonal number:\n- Use the formula \\( D_n = 4n^2 - 3n \\).\n- Substitute the given \\( n \\) into this formula to compute the decagonal number.\n\n### 3. Write a pseudocode solution\n\n```\nfunction is_num_decagonal(n):\n    calculate decagonal_number using the formula 4 * n^2 - 3 * n\n    return decagonal_number\n```\n\n### 4. Output the final Python 3 solution with your solution steps in comments\n\n```python\ndef is_num_decagonal(n: int) -> int:\n    # Calculate the nth decagonal number using the formula\n    # D_n = 4n^2 - 3n\n    decagonal_number = 4 * n * n - 3 * n\n    return decagonal_number\n```\n\nThis function takes an integer `n` as input and returns the nth decagonal number by applying the formula \\( D_n = 4n^2 - 3n \\).",
    "no_parent": true,
    "dependency_used": false
}