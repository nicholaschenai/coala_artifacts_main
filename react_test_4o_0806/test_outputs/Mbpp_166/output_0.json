{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n\nTests failed:\nNone",
    "code": "\ndef find_even_pair(nums):\n    # Initialize counters for even and odd numbers\n    even_count = 0\n    odd_count = 0\n    \n    # Count the number of even and odd numbers in the list\n    for num in nums:\n        if num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    \n    # Calculate the number of pairs of even numbers\n    even_pairs = even_count * (even_count - 1) // 2\n    # Calculate the number of pairs of odd numbers\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    # Return the total number of pairs that XOR to an even number\n    return even_pairs + odd_pairs\n",
    "full_code": "\ndef find_even_pair(nums):\n    # Initialize counters for even and odd numbers\n    even_count = 0\n    odd_count = 0\n    \n    # Count the number of even and odd numbers in the list\n    for num in nums:\n        if num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    \n    # Calculate the number of pairs of even numbers\n    even_pairs = even_count * (even_count - 1) // 2\n    # Calculate the number of pairs of odd numbers\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    # Return the total number of pairs that XOR to an even number\n    return even_pairs + odd_pairs\n",
    "reward": true,
    "program_code": "\ndef find_even_pair(nums):\n    # Initialize counters for even and odd numbers\n    even_count = 0\n    odd_count = 0\n    \n    # Count the number of even and odd numbers in the list\n    for num in nums:\n        if num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    \n    # Calculate the number of pairs of even numbers\n    even_pairs = even_count * (even_count - 1) // 2\n    # Calculate the number of pairs of odd numbers\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    # Return the total number of pairs that XOR to an even number\n    return even_pairs + odd_pairs\n",
    "program_name": "find_even_pair",
    "dependencies": [],
    "raw_msg": "## Problem Restatement\n\nWe need to write a function that takes a list of integers and counts how many pairs of integers in the list have an XOR result that is an even number.\n\n## Conceptual Solution\n\n1. **Understanding XOR and Even Numbers**: \n   - XOR of two numbers is even if both numbers have the same parity (both are even or both are odd).\n   - This is because XOR results in a binary number where a bit is set to 1 if the corresponding bits of the operands are different. For the least significant bit (which determines evenness), if both numbers are even or both are odd, the result will be even.\n\n2. **Approach**:\n   - Count the number of even numbers and the number of odd numbers in the list.\n   - Calculate the number of pairs of even numbers and the number of pairs of odd numbers.\n   - The total number of pairs that XOR to an even number is the sum of these two counts.\n\n3. **Steps**:\n   - Initialize counters for even and odd numbers.\n   - Iterate through the list and update the counters based on the parity of each number.\n   - Calculate the number of pairs of even numbers using the combination formula `nC2 = n * (n - 1) / 2`.\n   - Calculate the number of pairs of odd numbers using the same formula.\n   - Return the sum of these two values.\n\n## Pseudocode\n\n```\nfunction find_even_pair(nums):\n    even_count = 0\n    odd_count = 0\n    \n    for each number in nums:\n        if number is even:\n            increment even_count\n        else:\n            increment odd_count\n    \n    even_pairs = even_count * (even_count - 1) // 2\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    return even_pairs + odd_pairs\n```\n\n## Final Python Solution\n\n```python\ndef find_even_pair(nums):\n    # Initialize counters for even and odd numbers\n    even_count = 0\n    odd_count = 0\n    \n    # Count the number of even and odd numbers in the list\n    for num in nums:\n        if num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    \n    # Calculate the number of pairs of even numbers\n    even_pairs = even_count * (even_count - 1) // 2\n    # Calculate the number of pairs of odd numbers\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    # Return the total number of pairs that XOR to an even number\n    return even_pairs + odd_pairs\n```",
    "no_parent": true,
    "dependency_used": false
}