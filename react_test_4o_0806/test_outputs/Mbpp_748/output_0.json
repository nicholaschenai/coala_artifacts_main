{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert capital_words_spaces(\"Python\") == 'Python'\n\nTests failed:\nNone",
    "code": "\ndef capital_words_spaces(s: str) -> str:\n    # Initialize an empty list to store the result\n    result = []\n    \n    # Iterate over each character in the string with its index\n    for i, c in enumerate(s):\n        # Check if the character is uppercase and not the first character\n        if c.isupper() and i != 0:\n            # Append a space before the character\n            result.append(' ')\n        # Append the character itself\n        result.append(c)\n    \n    # Join the list into a string and return it\n    return ''.join(result)\n",
    "full_code": "\ndef capital_words_spaces(s: str) -> str:\n    # Initialize an empty list to store the result\n    result = []\n    \n    # Iterate over each character in the string with its index\n    for i, c in enumerate(s):\n        # Check if the character is uppercase and not the first character\n        if c.isupper() and i != 0:\n            # Append a space before the character\n            result.append(' ')\n        # Append the character itself\n        result.append(c)\n    \n    # Join the list into a string and return it\n    return ''.join(result)\n",
    "reward": true,
    "program_code": "\ndef capital_words_spaces(s: str) -> str:\n    # Initialize an empty list to store the result\n    result = []\n    \n    # Iterate over each character in the string with its index\n    for i, c in enumerate(s):\n        # Check if the character is uppercase and not the first character\n        if c.isupper() and i != 0:\n            # Append a space before the character\n            result.append(' ')\n        # Append the character itself\n        result.append(c)\n    \n    # Join the list into a string and return it\n    return ''.join(result)\n",
    "program_name": "capital_words_spaces",
    "dependencies": [],
    "raw_msg": "## Problem Restatement\n\nWe need to write a function that takes a string as input and inserts spaces before each word that starts with a capital letter. If the string is a single word starting with a capital letter, it should remain unchanged.\n\n## Conceptual Solution\n\n1. Initialize an empty list to store the characters of the new string.\n2. Iterate over each character in the input string.\n3. For each character, check if it is a capital letter and if it is not the first character in the string.\n4. If it is a capital letter and not the first character, append a space to the list before appending the character.\n5. Append the character to the list.\n6. Join the list into a single string and return it.\n\n## Pseudocode\n\n```\nfunction capital_words_spaces(s):\n    initialize an empty list result\n    for each character c in string s with index i:\n        if c is uppercase and i is not 0:\n            append a space to result\n        append c to result\n    return the joined string from result\n```\n\n## Final Python Solution\n\n```python\ndef capital_words_spaces(s: str) -> str:\n    # Initialize an empty list to store the result\n    result = []\n    \n    # Iterate over each character in the string with its index\n    for i, c in enumerate(s):\n        # Check if the character is uppercase and not the first character\n        if c.isupper() and i != 0:\n            # Append a space before the character\n            result.append(' ')\n        # Append the character itself\n        result.append(c)\n    \n    # Join the list into a string and return it\n    return ''.join(result)\n```",
    "no_parent": true,
    "dependency_used": false
}