{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nNone\n\nTests failed:\nassert parabola_directrix(5,3,2)==-198 # output: 1",
    "code": "\ndef parabola_directrix(a: int, b: int, c: int) -> int:\n    # Step 1: Calculate the x-coordinate of the vertex\n    h = -b / (2 * a)\n    \n    # Step 2: Calculate the y-coordinate of the vertex\n    k = a * h**2 + b * h + c\n    \n    # Step 3: Calculate the y-coordinate of the directrix\n    directrix = k - 1 / (4 * a)\n    \n    # Return the directrix as an integer\n    return int(directrix)\n",
    "full_code": "\ndef parabola_directrix(a: int, b: int, c: int) -> int:\n    # Step 1: Calculate the x-coordinate of the vertex\n    h = -b / (2 * a)\n    \n    # Step 2: Calculate the y-coordinate of the vertex\n    k = a * h**2 + b * h + c\n    \n    # Step 3: Calculate the y-coordinate of the directrix\n    directrix = k - 1 / (4 * a)\n    \n    # Return the directrix as an integer\n    return int(directrix)\n",
    "reward": false,
    "program_code": "\ndef parabola_directrix(a: int, b: int, c: int) -> int:\n    # Step 1: Calculate the x-coordinate of the vertex\n    h = -b / (2 * a)\n    \n    # Step 2: Calculate the y-coordinate of the vertex\n    k = a * h**2 + b * h + c\n    \n    # Step 3: Calculate the y-coordinate of the directrix\n    directrix = k - 1 / (4 * a)\n    \n    # Return the directrix as an integer\n    return int(directrix)\n",
    "program_name": "parabola_directrix",
    "dependencies": [],
    "raw_msg": "### Problem Restatement\n\nWe need to write a function that calculates the directrix of a parabola given its equation in the form \\( y = ax^2 + bx + c \\). The function should take three parameters \\( a \\), \\( b \\), and \\( c \\), and return the y-coordinate of the directrix.\n\n### Conceptual Solution\n\n1. **Understand the Parabola Equation**: The standard form of a parabola is \\( y = ax^2 + bx + c \\). The vertex form is \\( y = a(x-h)^2 + k \\), where \\( (h, k) \\) is the vertex of the parabola.\n\n2. **Vertex Calculation**: The x-coordinate of the vertex \\( h \\) can be found using the formula \\( h = -\\frac{b}{2a} \\).\n\n3. **Directrix Calculation**: The directrix of a parabola is a horizontal line. For a parabola that opens upwards or downwards, the directrix is given by the formula \\( y = k - \\frac{1}{4a} \\), where \\( k \\) is the y-coordinate of the vertex.\n\n4. **Find the y-coordinate of the Vertex**: Substitute \\( h \\) back into the original equation to find \\( k \\): \\( k = a(h)^2 + b(h) + c \\).\n\n5. **Calculate the Directrix**: Use the formula for the directrix to find its y-coordinate.\n\n### Pseudocode\n\n1. Calculate \\( h = -\\frac{b}{2a} \\).\n2. Calculate \\( k = a(h)^2 + b(h) + c \\).\n3. Calculate the directrix as \\( y = k - \\frac{1}{4a} \\).\n4. Return the y-coordinate of the directrix.\n\n### Python Code\n\n```python\ndef parabola_directrix(a: int, b: int, c: int) -> int:\n    # Step 1: Calculate the x-coordinate of the vertex\n    h = -b / (2 * a)\n    \n    # Step 2: Calculate the y-coordinate of the vertex\n    k = a * h**2 + b * h + c\n    \n    # Step 3: Calculate the y-coordinate of the directrix\n    directrix = k - 1 / (4 * a)\n    \n    # Return the directrix as an integer\n    return int(directrix)\n```\n\nThis code calculates the directrix of a parabola given its coefficients \\( a \\), \\( b \\), and \\( c \\) by first finding the vertex and then using the vertex to determine the directrix. The result is returned as an integer.",
    "no_parent": true,
    "dependency_used": false
}