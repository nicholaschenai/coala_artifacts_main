{
    "env_feedback": "Note: Inputs/outputs here are automatically extracted/truncated so formatting may be a bit off.\nTests passed:\n\n Input: ['1', '2 6'] Output: 3\n\nTests failed:\nNone",
    "code": "\ndef countDivisors(n):\n    count = 0\n    i = 1\n    while i * i <= n:\n        if n % i == 0:\n            count += 1\n            if i != n // i:\n                count += 1\n        i += 1\n    return count\n\ndef solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    T = int(data[0])\n    index = 1\n    results = []\n    \n    for _ in range(T):\n        A = int(data[index])\n        B = int(data[index + 1])\n        index += 2\n        \n        if A == B:\n            results.append(-1)\n        else:\n            diff = abs(A - B)\n            result = countDivisors(diff)\n            results.append(result)\n    \n    for res in results:\n        print(res)\n\n# Call the solve function to execute the logic\nsolve()\n",
    "full_code": "\ndef countDivisors(n):\n    count = 0\n    i = 1\n    while i * i <= n:\n        if n % i == 0:\n            count += 1\n            if i != n // i:\n                count += 1\n        i += 1\n    return count\n\ndef solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    T = int(data[0])\n    index = 1\n    results = []\n    \n    for _ in range(T):\n        A = int(data[index])\n        B = int(data[index + 1])\n        index += 2\n        \n        if A == B:\n            results.append(-1)\n        else:\n            diff = abs(A - B)\n            result = countDivisors(diff)\n            results.append(result)\n    \n    for res in results:\n        print(res)\n\n# Call the solve function to execute the logic\nsolve()\n",
    "reward": true,
    "program_code": "\ndef countDivisors(n):\n    count = 0\n    i = 1\n    while i * i <= n:\n        if n % i == 0:\n            count += 1\n            if i != n // i:\n                count += 1\n        i += 1\n    return count\n\ndef solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    T = int(data[0])\n    index = 1\n    results = []\n    \n    for _ in range(T):\n        A = int(data[index])\n        B = int(data[index + 1])\n        index += 2\n        \n        if A == B:\n            results.append(-1)\n        else:\n            diff = abs(A - B)\n            result = countDivisors(diff)\n            results.append(result)\n    \n    for res in results:\n        print(res)\n\n# Call the solve function to execute the logic\nsolve()\n",
    "program_name": "solve",
    "dependencies": [],
    "raw_msg": "```python\ndef countDivisors(n):\n    count = 0\n    i = 1\n    while i * i <= n:\n        if n % i == 0:\n            count += 1\n            if i != n // i:\n                count += 1\n        i += 1\n    return count\n\ndef solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    T = int(data[0])\n    index = 1\n    results = []\n    \n    for _ in range(T):\n        A = int(data[index])\n        B = int(data[index + 1])\n        index += 2\n        \n        if A == B:\n            results.append(-1)\n        else:\n            diff = abs(A - B)\n            result = countDivisors(diff)\n            results.append(result)\n    \n    for res in results:\n        print(res)\n\n# Call the solve function to execute the logic\nsolve()\n```",
    "no_parent": false,
    "dependency_used": false
}