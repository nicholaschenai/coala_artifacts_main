{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert is_Monotonic([6, 5, 4, 4]) == True\n\nTests failed:\nNone",
    "code": "\ndef is_Monotonic(array):\n    # Check if the array is empty or has one element\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags for increasing and decreasing\n    is_increasing = True\n    is_decreasing = True\n    \n    # Iterate through the array to check the conditions\n    for i in range(len(array) - 1):\n        if array[i] < array[i + 1]:\n            is_decreasing = False  # Found an increasing pair\n        if array[i] > array[i + 1]:\n            is_increasing = False  # Found a decreasing pair\n    \n    # The array is monotonic if it is either increasing or decreasing\n    return is_increasing or is_decreasing\n",
    "full_code": "\ndef is_Monotonic(array):\n    # Check if the array is empty or has one element\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags for increasing and decreasing\n    is_increasing = True\n    is_decreasing = True\n    \n    # Iterate through the array to check the conditions\n    for i in range(len(array) - 1):\n        if array[i] < array[i + 1]:\n            is_decreasing = False  # Found an increasing pair\n        if array[i] > array[i + 1]:\n            is_increasing = False  # Found a decreasing pair\n    \n    # The array is monotonic if it is either increasing or decreasing\n    return is_increasing or is_decreasing\n",
    "reward": true,
    "program_code": "\ndef is_Monotonic(array):\n    # Check if the array is empty or has one element\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags for increasing and decreasing\n    is_increasing = True\n    is_decreasing = True\n    \n    # Iterate through the array to check the conditions\n    for i in range(len(array) - 1):\n        if array[i] < array[i + 1]:\n            is_decreasing = False  # Found an increasing pair\n        if array[i] > array[i + 1]:\n            is_increasing = False  # Found a decreasing pair\n    \n    # The array is monotonic if it is either increasing or decreasing\n    return is_increasing or is_decreasing\n",
    "program_name": "is_Monotonic",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English**: \n   The task is to create a function that checks if a given list of numbers is monotonic. A list is considered monotonic if it is either entirely non-increasing or non-decreasing.\n\n2. **Conceptualize a solution first in plain English**: \n   To determine if the list is monotonic, we can check two conditions:\n   - If the list is non-decreasing: Each element should be less than or equal to the next element.\n   - If the list is non-increasing: Each element should be greater than or equal to the next element.\n   We can iterate through the list and check these conditions simultaneously.\n\n3. **Write a pseudocode solution**:\n   ```\n   function is_Monotonic(array):\n       if array is empty or has one element:\n           return True\n       initialize two flags: is_increasing and is_decreasing to True\n       for i from 0 to length of array - 2:\n           if array[i] < array[i + 1]:\n               set is_decreasing to False\n           if array[i] > array[i + 1]:\n               set is_increasing to False\n       return is_increasing or is_decreasing\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments**:\n```python\ndef is_Monotonic(array):\n    # Check if the array is empty or has one element\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags for increasing and decreasing\n    is_increasing = True\n    is_decreasing = True\n    \n    # Iterate through the array to check the conditions\n    for i in range(len(array) - 1):\n        if array[i] < array[i + 1]:\n            is_decreasing = False  # Found an increasing pair\n        if array[i] > array[i + 1]:\n            is_increasing = False  # Found a decreasing pair\n    \n    # The array is monotonic if it is either increasing or decreasing\n    return is_increasing or is_decreasing\n```",
    "no_parent": true,
    "dependency_used": false
}