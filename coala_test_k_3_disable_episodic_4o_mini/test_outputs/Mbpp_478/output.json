{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert remove_lowercase(\"PYTHon\")==('PYTH')\n\nTests failed:\nNone",
    "code": "\ndef remove_lowercase(s: str) -> str:\n    # Initialize an empty result string\n    result = \"\"\n    \n    # Loop through each character in the input string\n    for char in s:\n        # If the character is not a lowercase letter, add it to the result\n        if not char.islower():\n            result += char\n            \n    # Return the final result string\n    return result\n",
    "full_code": "\ndef remove_lowercase(s: str) -> str:\n    # Initialize an empty result string\n    result = \"\"\n    \n    # Loop through each character in the input string\n    for char in s:\n        # If the character is not a lowercase letter, add it to the result\n        if not char.islower():\n            result += char\n            \n    # Return the final result string\n    return result\n",
    "reward": true,
    "program_code": "\ndef remove_lowercase(s: str) -> str:\n    # Initialize an empty result string\n    result = \"\"\n    \n    # Loop through each character in the input string\n    for char in s:\n        # If the character is not a lowercase letter, add it to the result\n        if not char.islower():\n            result += char\n            \n    # Return the final result string\n    return result\n",
    "program_name": "remove_lowercase",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English**: The task is to create a function that takes a string as input and removes all lowercase substrings from it. A lowercase substring is defined as any sequence of characters in the string that are all lowercase letters.\n\n2. **Conceptualize a solution first in plain English**: To solve this problem, we can iterate through the string and check each character. If we encounter a lowercase letter, we will skip it and not include it in the final result. We will build a new string that only contains uppercase letters and any other characters that are not lowercase.\n\n3. **Write a pseudocode solution**:\n   - Initialize an empty result string.\n   - Loop through each character in the input string.\n   - If the character is not a lowercase letter, append it to the result string.\n   - Return the result string.\n\n4. **Output the final Python 3 solution with your solution steps in comments**:\n\n```python\ndef remove_lowercase(s: str) -> str:\n    # Initialize an empty result string\n    result = \"\"\n    \n    # Loop through each character in the input string\n    for char in s:\n        # If the character is not a lowercase letter, add it to the result\n        if not char.islower():\n            result += char\n            \n    # Return the final result string\n    return result\n```",
    "no_parent": true,
    "dependency_used": false
}