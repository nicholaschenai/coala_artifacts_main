{
    "env_feedback": "Note: Inputs/outputs here are automatically extracted/truncated so formatting may be a bit off.\nTests passed:\n\n Input: ['2', 'aabcc', 'bababccc'] Output: ac\nbc\n\nTests failed:\nNone",
    "code": "\ndef remove_abc_pairs():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    T = int(data[0])\n    results = []\n    \n    for i in range(1, T + 1):\n        s = data[i]\n        while 'abc' in s:\n            s = s.replace('abc', '', 1)\n        results.append(s)\n    \n    for result in results:\n        print(result)\n\n# Call the function to execute it\nremove_abc_pairs()\n",
    "full_code": "\ndef remove_abc_pairs():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    T = int(data[0])\n    results = []\n    \n    for i in range(1, T + 1):\n        s = data[i]\n        while 'abc' in s:\n            s = s.replace('abc', '', 1)\n        results.append(s)\n    \n    for result in results:\n        print(result)\n\n# Call the function to execute it\nremove_abc_pairs()\n",
    "reward": true,
    "program_code": "\ndef remove_abc_pairs():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    T = int(data[0])\n    results = []\n    \n    for i in range(1, T + 1):\n        s = data[i]\n        while 'abc' in s:\n            s = s.replace('abc', '', 1)\n        results.append(s)\n    \n    for result in results:\n        print(result)\n\n# Call the function to execute it\nremove_abc_pairs()\n",
    "program_name": "remove_abc_pairs",
    "dependencies": [],
    "raw_msg": "```python\ndef remove_abc_pairs():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    T = int(data[0])\n    results = []\n    \n    for i in range(1, T + 1):\n        s = data[i]\n        while 'abc' in s:\n            s = s.replace('abc', '', 1)\n        results.append(s)\n    \n    for result in results:\n        print(result)\n\n# Call the function to execute it\nremove_abc_pairs()\n```",
    "no_parent": false,
    "dependency_used": false
}