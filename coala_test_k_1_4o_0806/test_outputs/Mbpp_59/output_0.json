{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert is_octagonal(5) == 65\n\nTests failed:\nNone",
    "code": "\ndef is_octagonal(n: int) -> int:\n    # Calculate the nth octagonal number using the formula\n    # O(n) = n * (3n - 2)\n    octagonal_number = n * (3 * n - 2)\n    # Return the calculated octagonal number\n    return octagonal_number\n",
    "full_code": "\ndef is_octagonal(n: int) -> int:\n    # Calculate the nth octagonal number using the formula\n    # O(n) = n * (3n - 2)\n    octagonal_number = n * (3 * n - 2)\n    # Return the calculated octagonal number\n    return octagonal_number\n",
    "reward": true,
    "program_code": "\ndef is_octagonal(n: int) -> int:\n    # Calculate the nth octagonal number using the formula\n    # O(n) = n * (3n - 2)\n    octagonal_number = n * (3 * n - 2)\n    # Return the calculated octagonal number\n    return octagonal_number\n",
    "program_name": "is_octagonal",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English:**\n\n   We need to write a function that calculates the nth octagonal number. An octagonal number is a figurate number that represents an octagon. The nth octagonal number can be calculated using a specific formula.\n\n2. **Conceptualize a solution in plain English:**\n\n   To find the nth octagonal number, we can use the formula: \n   \\[\n   O(n) = n \\times (3n - 2)\n   \\]\n   This formula directly gives us the nth octagonal number. We will implement this formula in a function that takes an integer `n` as input and returns the nth octagonal number.\n\n3. **Write a pseudocode solution:**\n\n   ```\n   Define function is_octagonal(n):\n       Calculate octagonal number using formula: n * (3 * n - 2)\n       Return the calculated octagonal number\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n\n```python\ndef is_octagonal(n: int) -> int:\n    # Calculate the nth octagonal number using the formula\n    # O(n) = n * (3n - 2)\n    octagonal_number = n * (3 * n - 2)\n    # Return the calculated octagonal number\n    return octagonal_number\n```",
    "no_parent": true,
    "dependency_used": false
}