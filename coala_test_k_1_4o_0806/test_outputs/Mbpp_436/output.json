{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert neg_nos([-1,4,5,-6]) == [-1,-6]\n\nTests failed:\nNone",
    "code": "\ndef neg_nos(numbers):\n    # Create an empty list to store negative numbers\n    negative_numbers = []\n    \n    # Iterate through each number in the input list\n    for number in numbers:\n        # Check if the number is negative\n        if number < 0:\n            # Add the negative number to the list\n            negative_numbers.append(number)\n    \n    # Return the list of negative numbers\n    return negative_numbers\n",
    "full_code": "\ndef neg_nos(numbers):\n    # Create an empty list to store negative numbers\n    negative_numbers = []\n    \n    # Iterate through each number in the input list\n    for number in numbers:\n        # Check if the number is negative\n        if number < 0:\n            # Add the negative number to the list\n            negative_numbers.append(number)\n    \n    # Return the list of negative numbers\n    return negative_numbers\n",
    "reward": true,
    "program_code": "\ndef neg_nos(numbers):\n    # Create an empty list to store negative numbers\n    negative_numbers = []\n    \n    # Iterate through each number in the input list\n    for number in numbers:\n        # Check if the number is negative\n        if number < 0:\n            # Add the negative number to the list\n            negative_numbers.append(number)\n    \n    # Return the list of negative numbers\n    return negative_numbers\n",
    "program_name": "neg_nos",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English:**\n\n   We need to create a function that takes a list of numbers and returns a new list containing only the negative numbers from the original list.\n\n2. **Conceptualize a solution in plain English:**\n\n   - We will iterate through each number in the given list.\n   - For each number, we will check if it is negative.\n   - If a number is negative, we will add it to a new list.\n   - Finally, we will return this new list containing all the negative numbers.\n\n3. **Write a pseudocode solution:**\n\n   ```\n   function neg_nos(numbers):\n       create an empty list called negative_numbers\n       for each number in numbers:\n           if the number is less than 0:\n               add the number to negative_numbers\n       return negative_numbers\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n\n```python\ndef neg_nos(numbers):\n    # Create an empty list to store negative numbers\n    negative_numbers = []\n    \n    # Iterate through each number in the input list\n    for number in numbers:\n        # Check if the number is negative\n        if number < 0:\n            # Add the negative number to the list\n            negative_numbers.append(number)\n    \n    # Return the list of negative numbers\n    return negative_numbers\n```",
    "no_parent": true,
    "dependency_used": false
}