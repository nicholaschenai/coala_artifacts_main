{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n\nTests failed:\nNone",
    "code": "\ndef find_even_pair(numbers):\n    # Initialize counters for even and odd numbers\n    even_count = 0\n    odd_count = 0\n    \n    # Count the number of even and odd numbers\n    for number in numbers:\n        if number % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    \n    # Calculate the number of pairs of even numbers\n    even_pairs = even_count * (even_count - 1) // 2\n    \n    # Calculate the number of pairs of odd numbers\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    # Return the total number of pairs that XOR to an even number\n    return even_pairs + odd_pairs\n",
    "full_code": "\ndef find_even_pair(numbers):\n    # Initialize counters for even and odd numbers\n    even_count = 0\n    odd_count = 0\n    \n    # Count the number of even and odd numbers\n    for number in numbers:\n        if number % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    \n    # Calculate the number of pairs of even numbers\n    even_pairs = even_count * (even_count - 1) // 2\n    \n    # Calculate the number of pairs of odd numbers\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    # Return the total number of pairs that XOR to an even number\n    return even_pairs + odd_pairs\n",
    "reward": true,
    "program_code": "\ndef find_even_pair(numbers):\n    # Initialize counters for even and odd numbers\n    even_count = 0\n    odd_count = 0\n    \n    # Count the number of even and odd numbers\n    for number in numbers:\n        if number % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    \n    # Calculate the number of pairs of even numbers\n    even_pairs = even_count * (even_count - 1) // 2\n    \n    # Calculate the number of pairs of odd numbers\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    # Return the total number of pairs that XOR to an even number\n    return even_pairs + odd_pairs\n",
    "program_name": "find_even_pair",
    "dependencies": [],
    "raw_msg": "## Problem Restatement\n\nWe need to write a function that counts the number of pairs of integers in a list that XOR to an even number. The XOR operation between two numbers results in an even number if both numbers are either even or both are odd.\n\n## Conceptual Solution\n\n1. **Identify Even and Odd Numbers**: We need to determine which numbers in the list are even and which are odd. This is because:\n   - XOR of two even numbers is even.\n   - XOR of two odd numbers is even.\n\n2. **Count Even and Odd Numbers**: Count the number of even numbers and the number of odd numbers in the list.\n\n3. **Calculate Pairs**:\n   - The number of pairs of even numbers is given by the combination formula `C(n, 2) = n * (n - 1) / 2`, where `n` is the number of even numbers.\n   - Similarly, calculate the number of pairs of odd numbers using the same formula.\n\n4. **Sum the Pairs**: The total number of pairs that XOR to an even number is the sum of the pairs of even numbers and the pairs of odd numbers.\n\n## Pseudocode\n\n1. Initialize `even_count` and `odd_count` to 0.\n2. Iterate over each number in the list:\n   - If the number is even, increment `even_count`.\n   - If the number is odd, increment `odd_count`.\n3. Calculate the number of even pairs using the formula `even_count * (even_count - 1) // 2`.\n4. Calculate the number of odd pairs using the formula `odd_count * (odd_count - 1) // 2`.\n5. Return the sum of even pairs and odd pairs.\n\n## Final Python Solution\n\n```python\ndef find_even_pair(numbers):\n    # Initialize counters for even and odd numbers\n    even_count = 0\n    odd_count = 0\n    \n    # Count the number of even and odd numbers\n    for number in numbers:\n        if number % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    \n    # Calculate the number of pairs of even numbers\n    even_pairs = even_count * (even_count - 1) // 2\n    \n    # Calculate the number of pairs of odd numbers\n    odd_pairs = odd_count * (odd_count - 1) // 2\n    \n    # Return the total number of pairs that XOR to an even number\n    return even_pairs + odd_pairs\n```\n\n### Explanation of the Code\n\n- We first count the number of even and odd numbers in the list.\n- We then calculate the number of pairs of even numbers and odd numbers separately using the combination formula for pairs.\n- Finally, we return the sum of these pairs, which gives us the total number of pairs that XOR to an even number.",
    "no_parent": true,
    "dependency_used": false
}