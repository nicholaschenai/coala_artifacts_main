{
    "env_feedback": "Note: Inputs/outputs here are automatically extracted/truncated so formatting may be a bit off.\nTests passed:\n\nNone\n\nTests failed:\n Input: ['2', '1', '-1', '2', '1 2'] Expected output: [{'NO'}, {'YES'}] # Execution output: []\nNo output detected. You might want to check the reading from / writing to standard IO.\nA common mistake is to put the IO inside a function, but the function is not called.\n",
    "code": "\ndef is_good_sequence_possible():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    index = 0\n    T = int(data[index])\n    index += 1\n    results = []\n    \n    for _ in range(T):\n        N = int(data[index])\n        index += 1\n        A = list(map(int, data[index:index + N]))\n        index += N\n        \n        sum_A = sum(A)\n        sum_indices = N * (N + 1) // 2  # Sum of first N natural numbers\n        \n        if sum_A % sum_indices == 0:\n            results.append(\"YES\")\n        else:\n            results.append(\"NO\")\n    \n    for result in results:\n        print(result)\n\n",
    "full_code": "\ndef is_good_sequence_possible():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    index = 0\n    T = int(data[index])\n    index += 1\n    results = []\n    \n    for _ in range(T):\n        N = int(data[index])\n        index += 1\n        A = list(map(int, data[index:index + N]))\n        index += N\n        \n        sum_A = sum(A)\n        sum_indices = N * (N + 1) // 2  # Sum of first N natural numbers\n        \n        if sum_A % sum_indices == 0:\n            results.append(\"YES\")\n        else:\n            results.append(\"NO\")\n    \n    for result in results:\n        print(result)\n\n",
    "reward": false,
    "program_code": "\ndef is_good_sequence_possible():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    index = 0\n    T = int(data[index])\n    index += 1\n    results = []\n    \n    for _ in range(T):\n        N = int(data[index])\n        index += 1\n        A = list(map(int, data[index:index + N]))\n        index += N\n        \n        sum_A = sum(A)\n        sum_indices = N * (N + 1) // 2  # Sum of first N natural numbers\n        \n        if sum_A % sum_indices == 0:\n            results.append(\"YES\")\n        else:\n            results.append(\"NO\")\n    \n    for result in results:\n        print(result)\n\n",
    "program_name": "is_good_sequence_possible",
    "dependencies": [],
    "raw_msg": "### Problem Restatement\n\nWe have a sequence of integers, and we want to determine if it's possible to make the sum of the sequence equal to zero by performing a series of operations. In each operation, we can choose an index `i` and decrease the element at that index by `i`. We need to determine if it's possible to make the sequence \"good\" (i.e., sum to zero) for multiple test cases.\n\n### Conceptual Solution\n\n1. **Understanding the Operation**: For each element `A[i]`, we can decrease it by `i` any number of times. This means we can effectively reduce `A[i]` by any multiple of `i`.\n\n2. **Key Insight**: The operation allows us to adjust each element by multiples of its index. Therefore, the sum of the sequence can be adjusted by multiples of the sum of indices. \n\n3. **Feasibility Check**: To make the sequence sum to zero, the sum of the sequence must be a multiple of the sum of indices. If it is, we can perform operations to adjust the sequence to zero; otherwise, it's impossible.\n\n4. **Algorithm**:\n   - For each test case, calculate the sum of the sequence.\n   - Calculate the sum of indices from `1` to `N`.\n   - Check if the sum of the sequence is a multiple of the sum of indices.\n   - If it is, print \"YES\"; otherwise, print \"NO\".\n\n### Pseudocode\n\n```\nfunction is_good_sequence_possible(T, test_cases):\n    for each test_case in test_cases:\n        N = test_case.N\n        A = test_case.A\n        \n        sum_A = sum(A)\n        sum_indices = N * (N + 1) / 2  # Sum of first N natural numbers\n        \n        if sum_A % sum_indices == 0:\n            print \"YES\"\n        else:\n            print \"NO\"\n```\n\n### Final Python Solution\n\n```python\ndef is_good_sequence_possible():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    index = 0\n    T = int(data[index])\n    index += 1\n    results = []\n    \n    for _ in range(T):\n        N = int(data[index])\n        index += 1\n        A = list(map(int, data[index:index + N]))\n        index += N\n        \n        sum_A = sum(A)\n        sum_indices = N * (N + 1) // 2  # Sum of first N natural numbers\n        \n        if sum_A % sum_indices == 0:\n            results.append(\"YES\")\n        else:\n            results.append(\"NO\")\n    \n    for result in results:\n        print(result)\n\n```\n\nThis solution reads input, processes each test case, and checks if the sequence can be made \"good\" by verifying if the sum of the sequence is a multiple of the sum of indices. If it is, the sequence can be adjusted to sum to zero; otherwise, it cannot.",
    "no_parent": false,
    "dependency_used": false
}